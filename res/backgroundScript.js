const canvas = document.getElementById('canvas'); const ctx = canvas.getContext('2d'); canvas.width = window.innerWidth; canvas.height = window.innerHeight; let particlesArray = []; const colors = ['#f48fb1', '#ffab91', '#81d4fa', '#a5d6a7', '#fff176']; let mouse = { x: null, y: null, radius: 100 }; window.addEventListener('mousemove', (event) => { mouse.x = event.x; mouse.y = event.y }); window.addEventListener('resize', () => { canvas.width = window.innerWidth; canvas.height = window.innerHeight; initParticles() }); function Particle(x, y, size, color, velocityX, velocityY) { this.x = x; this.y = y; this.size = size; this.color = color; this.velocityX = velocityX; this.velocityY = velocityY } Particle.prototype.draw = function () { ctx.fillStyle = this.color; ctx.beginPath(); ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2); ctx.closePath(); ctx.fill() }; Particle.prototype.update = function () { this.x += this.velocityX; this.y += this.velocityY; if (this.x + this.size > canvas.width || this.x - this.size < 0) { this.velocityX = -this.velocityX } if (this.y + this.size > canvas.height || this.y - this.size < 0) { this.velocityY = -this.velocityY } const dx = mouse.x - this.x; const dy = mouse.y - this.y; const distance = Math.sqrt(dx * dx + dy * dy); if (distance < mouse.radius) { this.x -= dx / 10; this.y -= dy / 10 } this.draw() }; function initParticles() { particlesArray = []; const numberOfParticles = (canvas.width * canvas.height) / 9000; for (let i = 0; i < numberOfParticles; i++) { const size = Math.random() * 3 + 1; const x = Math.random() * (canvas.width - size * 2) + size; const y = Math.random() * (canvas.height - size * 2) + size; const color = colors[Math.floor(Math.random() * colors.length)]; const velocityX = (Math.random() - 0.5) * 1.5; const velocityY = (Math.random() - 0.5) * 1.5; particlesArray.push(new Particle(x, y, size, color, velocityX, velocityY)) } } function animate() { ctx.clearRect(0, 0, canvas.width, canvas.height); particlesArray.forEach(particle => particle.update()); connectParticles(); requestAnimationFrame(animate) } function connectParticles() { for (let a = 0; a < particlesArray.length; a++) { for (let b = a; b < particlesArray.length; b++) { const dx = particlesArray[a].x - particlesArray[b].x; const dy = particlesArray[a].y - particlesArray[b].y; const distance = Math.sqrt(dx * dx + dy * dy); if (distance < 100) { ctx.strokeStyle = particlesArray[a].color; ctx.lineWidth = 0.5; ctx.beginPath(); ctx.moveTo(particlesArray[a].x, particlesArray[a].y); ctx.lineTo(particlesArray[b].x, particlesArray[b].y); ctx.stroke() } } } } initParticles(); animate();